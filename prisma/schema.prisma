// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Admin
  User
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  price       Decimal     @db.Decimal(18,2)
  quantity    Int
  inStock     Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[]

  @@map("products")
}

model Customer {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  phoneNumber String   @db.VarChar(15)
  address     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orders      Order[]

  @@map("customers")
}

model Staff {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  role      Role     @default(User)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]

  @@map("staffs")
}

model OrderItem {
  id              Int               @id @default(autoincrement())
  name            String
  price           Decimal           @db.Decimal(18,2)
  quantity          Int
  product         Product           @relation(fields: [productId], references: [id])
  productId       Int
  order          Order              @relation(fields: [orderId], references: [id])
  orderId        Int  

  @@map("orderItems")
}

model Order {
  id              Int               @id @default(autoincrement())
  total           Decimal           @db.Decimal(18,2)
  staff           Staff             @relation(fields: [staffId], references: [id])
  staffId         Int
  customer        Customer          @relation(fields: [customerId], references: [id])
  customerId      Int
  invoiceUrl      String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  orderItems      OrderItem[]

  @@map("orders")
}


